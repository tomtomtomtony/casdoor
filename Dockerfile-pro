FROM --platform=$BUILDPLATFORM 192.168.110.2:8066/node:18.19.0-alpine AS FRONT
WORKDIR /web
COPY ./web/package.json ./web/yarn.lock ./
RUN yarn install --frozen-lockfile --network-timeout 1000000 --production && \
    yarn cache clean
COPY ./web .
RUN NODE_OPTIONS="--max-old-space-size=4096" yarn run build

FROM --platform=$BUILDPLATFORM 192.168.110.2:8066/golang:1.21.13-alpine AS BACK
WORKDIR /go/src/casdoor
COPY go.mod go.sum ./
RUN go mod download  # 分离依赖下载与构建
COPY . .
RUN CGO_ENABLED=0 ./build.sh && \
    go test -v -run TestGetVersionInfo ./util/system_test.go ./util/system.go > version_info.txt

FROM 192.168.110.2:8066/alpine:3.19 AS STANDARD
ENV USER=casdoor

RUN sed -i 's/https/http/' /etc/apk/repositories && \
    apk add --no-cache sudo tzdata curl ca-certificates && \
    update-ca-certificates && \
    rm -rf /var/cache/apk/*

RUN adduser -D $USER -u 1000 && \
    echo "$USER ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/$USER && \
    chmod 0440 /etc/sudoers.d/$USER && \
    mkdir -p /logs && chown -R $USER:$USER /logs

USER $USER

WORKDIR /
COPY --from=BACK /go/src/casdoor/server_${BUILDX_ARCH} ./server
COPY --from=BACK /go/src/casdoor/swagger ./swagger
COPY --from=BACK /go/src/casdoor/docker-entrypoint.sh /docker-entrypoint.sh
COPY --from=BACK /go/src/casdoor/conf/app.conf ./conf/app.conf
COPY --from=BACK /go/src/casdoor/version_info.txt ./go/src/casdoor/version_info.txt
COPY --from=FRONT /web/build ./web/build

ENTRYPOINT ["/bin/bash"]
CMD ["/docker-entrypoint.sh"]
